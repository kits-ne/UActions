{
    "$schema": "https://json-schema.org/draft-07/schema",
    "title": "JSON Schema for Hadolint, a Dockerfile linter tool",
    "description": "Dockerfile linter, validate inline bash, written in Haskell",
    "type": "object",
    "additionalProperties": false,
    "required": [
        "jobs"
    ],
    "definitions": {
        "action-names": {
            "type": "string",
            "oneOf": [
                {
                    "const": "build"
                },
                {
                    "const": "player-settings"
                }
            ]
        },
        "build-step": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "uses": {
                    "$ref": "#/definitions/action-names"
                },
                "with": {
                    "type": "object"
                }
            },
            "if": {
                "properties": {
                    "uses": {
                        "const": "build"
                    }
                },
                "required": [
                    "uses"
                ]
            },
            "then": {
                "properties": {
                    "with": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "path"
                        ]
                    }
                },
                "required": [
                    "with"
                ],
                "not": {
                    "required": ["name"]
                }
            }
        },
        "player-settings-step": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "uses": {
                    "type": "string"
                },
                "with": {
                    "type": "object"
                }
            },
            "if": {
                "properties": {
                    "uses": {
                        "const": "player-settings"
                    }
                },
                "required": [
                    "uses"
                ]
            },
            "then": {
                "properties": {
                    "with": {
                        "type": "object",
                        "properties": {
                            "company-name": {
                                "type": "string"
                            },
                            "product-name": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "company-name",
                            "product-name",
                            "version"
                        ]
                    }
                },
                "required": [
                    "with"
                ],
                "not": {
                    "required": ["name"]
                }
            }
        }
    },
    "properties": {
        "action": {
            "type": "object",
            "properties": {
                "foo": {
                    "type": "string"
                }
            },
            "if": {
                "properties": {
                    "foo": {
                        "const": "bar"
                    }
                },
                "required": [
                    "foo"
                ]
            },
            "then": {
                "properties": {
                    "bar": {
                        "type": "number"
                    }
                },
                "required": [
                    "bar"
                ]
            }
        },
        "exclusive": {
            "type": "object",
            "not": {
                "anyOf": [
                    {
                        "required": [
                            "baz",
                            "buzz"
                        ]
                    },
                    {
                        "required": [
                            "buzz",
                            "fizz"
                        ]
                    },
                    {
                        "required": [
                            "fizz",
                            "baz"
                        ]
                    }
                ]
            },
            "anyOf": [
                {
                    "required": [
                        "foo"
                    ]
                },
                {
                    "required": [
                        "baz"
                    ]
                },
                {
                    "required": [
                        "buzz"
                    ]
                },
                {
                    "required": [
                        "fizz"
                    ]
                }
            ]
        },
        "env": {
            "type": "object",
            "description": "runtime environment"
        },
        "steps": {
            "patternProperties": {
                "": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/build-step"
                        },
                        {
                            "$ref": "#/definitions/player-settings-step"
                        }
                    ]
                }
            }
        },
        "dynamic": {
            "type": "object",
            "properties": {
                "uses": {
                    "type": "string"
                },
                "with": {
                    "type": "object",
                    "if": {
                        "properties": {
                            "uses": {
                                "const": "build"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "path": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "path"
                        ]
                    }
                }
            }
        },
        "p": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "age": {
                    "type": "number"
                }
            },
            "if": {
                "properties": {
                    "name": {
                        "const": "final"
                    }
                }
            },
            "then": {
                "properties": {
                    "age": {
                        "const": 23
                    }
                }
            }
        },
        "pat": {
            "type": "object",
            "patternProperties": {
                "^S_": {
                    "type": "string"
                },
                "^I_": {
                    "type": "integer"
                }
            }
        },
        "jobs": {
            "type": "object",
            "patternProperties": {
                "": {
                    "type": "object",
                    "properties": {
                        "platform": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "android"
                                },
                                {
                                    "const": "ios"
                                }
                            ]
                        },
                        "steps": {
                            "type": "array",
                            "items": {
                                "oneOf": [
                                    {
                                        "$ref": "#/definitions/build-step"
                                    },
                                    {
                                        "$ref": "#/definitions/player-settings-step"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "ignored": {
            "type": "array",
            "description": "A list of rules to be ignored",
            "items": {
                "type": "string",
                "oneOf": [
                    {
                        "const": "DL3000",
                        "description": "Use absolute WORKDIR."
                    },
                    {
                        "const": "DL3001",
                        "description": "For some bash commands it makes no sense running them in a Docker container like ssh, vim, shutdown, service, ps, free, top, kill, mount, ifconfig."
                    },
                    {
                        "const": "DL3002",
                        "description": "Last user should not be root."
                    },
                    {
                        "const": "DL3003",
                        "description": "Use WORKDIR to switch to a directory."
                    },
                    {
                        "const": "DL3004",
                        "description": "Do not use sudo as it leads to unpredictable behavior. Use a tool like gosu to enforce root."
                    },
                    {
                        "const": "DL3005",
                        "description": "Do not use apt-get upgrade or dist-upgrade."
                    }
                ],
                "title": "Rule"
            }
        },
        "trustedRegistries": {
            "type": "array",
            "description": "A list of trusted registries. Ex: docker.io",
            "items": {
                "type": "string"
            }
        }
    },
    "dependencies": {
    }
}